// 散列Hash Table
// V8引擎的数组？
// V8如果发现数组是稀疏的，就会用一个散列结构去存储数组
// 如果发现数组是连续的，就会用连续的内存实现

// 可能的键全集U 对10取余
// 0-9 10个值（槽Slot）
// 解决冲突
// 散列函数必须是一个纯函数

// JS中浮点数和整数占用相同数量的字节  
// byte = 8bit
// Number：4bytes 32bit 
// 处理整数：
 K => K % M 
// 处理浮点数
 K => binary_value(k) % M 
//  处理字符串

